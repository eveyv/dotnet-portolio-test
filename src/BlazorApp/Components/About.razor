<section class="light" id="about">
    @if (hero is not null)
    {
        <img class="background" src="@(hero.Src)" alt="@(hero.Alt)" />
    }
    <h2>Background</h2>
    <div style="background-color: white; width: 50%; padding: 2rem; margin: 3rem auto; text-align: left;">
    @if (aboutMe is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <p class="large">@aboutMe.Description</p>
        <hr />
        <ul class="responsive-ul" style="text-align: center; columns: 1; list-style-position: inside; font-size: 1.0rem; gap: 3rem;">
        @foreach (var skill in aboutMe.Skills)
        {
            <li key="@skill">@skill</li>
        }
        </ul>
        <hr />
        <p style="padding: 1rem 3rem 0;">@aboutMe.DetailOrQuote</p>
    }
    </div>
    
     <div style="position: absolute; bottom: 8rem; left: 50%;">
        <a href="#home" target="_top">
            <img src="images/up-arrow.svg" style="height: 3rem; width: 3rem;" alt="home" />
        </a>
    </div>

</section>

@code {
    [Parameter, EditorRequired]
    public required HttpClient Http { get; set; }

    [Parameter, EditorRequired]
    public required HeroImageService HeroImageService { get; set; }

    private AboutMe? aboutMe;
    private HeroImage? hero;

    protected override async Task OnInitializedAsync()
    {
        aboutMe = await Http.GetFromJsonAsync<AboutMe>("sample-data/aboutme.json");
        hero = await HeroImageService.GetHeroAsync(img => img.Name is "about");

    }
}
